"use server";
/**
 * @fileOverview An AI agent to generate a product description based on its name, category, and key features/materials.
 *
 * - generateProductDescription - A function to get a product description.
 * - GenerateProductDescriptionInput - The input type for the function.
 * - GenerateProductDescriptionOutput - The return type for the function.
 */

import { ai } from "@/ai/genkit";
import { z } from "genkit";

const GenerateProductDescriptionInputSchema = z.object({
  productName: z.string().describe("The name of the product."),
  productCategory: z
    .string()
    .optional()
    .describe("The category of the product (e.g., Electronics, Apparel)."),
  keyFeatures: z
    .string()
    .optional()
    .describe(
      "Key features or materials of the product, comma-separated or as a brief list.",
    ),
});
export type GenerateProductDescriptionInput = z.infer<
  typeof GenerateProductDescriptionInputSchema
>;

const GenerateProductDescriptionOutputSchema = z.object({
  productDescription: z
    .string()
    .describe(
      "A compelling and marketable product description generated by the AI.",
    ),
});
export type GenerateProductDescriptionOutput = z.infer<
  typeof GenerateProductDescriptionOutputSchema
>;

export async function generateProductDescription(
  input: GenerateProductDescriptionInput,
): Promise<GenerateProductDescriptionOutput> {
  return generateProductDescriptionFlow(input);
}

const prompt = ai.definePrompt({
  name: "generateProductDescriptionPrompt",
  input: { schema: GenerateProductDescriptionInputSchema },
  output: { schema: GenerateProductDescriptionOutputSchema },
  prompt: `You are an expert product marketing copywriter.
Given the product name, category, and key features/materials below, generate a compelling and marketable product description (2-4 paragraphs).
Focus on highlighting the benefits and unique selling points. Maintain a professional yet engaging tone.

Product Name: {{{productName}}}
{{#if productCategory}}Product Category: {{{productCategory}}}{{/if}}
{{#if keyFeatures}}Key Features/Materials: {{{keyFeatures}}}{{/if}}

Return ONLY the generated product description in the 'productDescription' field of the JSON output.
`,
});

const generateProductDescriptionFlow = ai.defineFlow(
  {
    name: "generateProductDescriptionFlow",
    inputSchema: GenerateProductDescriptionInputSchema,
    outputSchema: GenerateProductDescriptionOutputSchema,
  },
  async (input) => {
    const { output } = await prompt(input);
    if (!output?.productDescription) {
      throw new Error(
        "AI failed to generate a product description in the expected format.",
      );
    }
    return output;
  },
);
